#!/bin/bash

# Run as:
# VERSION=$1 DEBUG=$2 ZTS=$3 THIRTYTWO=$4 POSTFIX= EXTRA_FLAGS=

# Figuring out where we are
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"

# Setting directories
PATCHES_DIR=$DIR/patches
TARGET_PREFIX_DIR=/usr/local/php
USER=`id -u -n`

# If first argument is an existing directory, use it as GIT checkout directory
if [[ -d $1 ]]; then
	GIT_DIR=$1
	shift

	# If the next argument is also a directory, use it as target install directory
	if [[ -d $1 ]]; then
		TARGET_PREFIX_DIR=$1
		shift
	fi
else
	GIT_DIR=/home/derick/dev/php/php-src.git
fi

echo ${GIT_DIR}
echo ${TARGET_PREFIX_DIR}

# Parsing arguments
VERSION=$1
DEBUG=$2
ZTS=$3
THIRTYTWO=$4
POSTFIX=
EXTRA_FLAGS=
export -n PHP_AUTOCONF

# Calculating postfix and extra flags
if (test "${DEBUG}" = "nodebug"); then
	POSTFIX="$POSTFIX-nodebug"
else
	EXTRA_FLAGS="$EXTRA_FLAGS --enable-debug"
fi

if (test "${ZTS}" = "zts"); then
	EXTRA_FLAGS="$EXTRA_FLAGS --enable-maintainer-zts --enable-zts"
	POSTFIX="$POSTFIX-zts"
fi

# Figuring out which branch we are on
SCRUBBED=`echo $VERSION | sed 's/[0-9.]*//'`
NUMBERS=`echo $VERSION | sed -r 's/[^0-9.]+//'`
MINI_VERSION=`echo $VERSION | sed 's/^\([0-9]\.[0-9]\).*/\1/'`
echo $NUMBERS
echo $MINI_VERSION

# Installing required packages
sudo apt install -y make autoconf gcc bison locate vim pkg-config libbz2-dev libjpeg-dev g++ libreadline-dev libmcrypt-dev re2c libsqlite3-dev

if (test "${THIRTYTWO}" = "32bit"); then
	export CFLAGS="-m32"
	POSTFIX="$POSTFIX-32bit"
	export PKG_CONFIG_PATH="/usr/lib/i386-linux-gnu/pkgconfig"
	sudo apt install -y libxml2-dev:i386 libicu-dev:i386 libz-dev:i386 libssl-dev:i386 libssl1.1:i386 libssl1.0.2:i386 libxslt1-dev:i386 libsasl2-dev:i386 libonig-dev:i386 libsqlite3-dev:i386
	sudo apt remove -y libsqlite3-dev:amd64
else
	sudo apt install -y libxml2-dev libpng-dev libicu-dev libz-dev libssl-dev libssl1.1 libssl1.0.2 libxslt1-dev libsasl2-dev libonig-dev libsqlite3-dev:amd64 libgmp3-dev
	sudo apt remove -y libsqlite3-dev:i386
fi

if (test "${SCRUBBED}" = "master"); then
	BRANCH=master

	cd $GIT_DIR
	git stash

	git checkout ${BRANCH} || exit 5
else
	if (test "${SCRUBBED}" = "dev"); then
		BRANCH=`echo ${VERSION} | sed 's/dev//'`
		BRANCH=PHP-${BRANCH}

		cd $GIT_DIR
		
		rm Zend/zend_ini_scanner.c Zend/zend_ini_scanner_defs.h ext/mbstring/oniguruma/oniguruma.h

		git stash
		git checkout ${BRANCH} || exit 5
		git clean -f

		if [[ -f ${PATCHES_DIR}/${MINI_VERSION}.diff.txt ]]; then
			echo "Patching for ${MINI_VERSION}"
			patch -p0 < /home/${USER}/dev/php/build-php/patches/${MINI_VERSION}.diff.txt
		fi
	else
		TAG=`echo ${VERSION}`
		BRANCH=php-${TAG}

		BUILDDIR="/tmp/php-build-cache/tmp-${VERSION}${POSTFIX}"
		rm -rf "${BUILDDIR}/php-${VERSION}"
		mkdir -p ${BUILDDIR}
		cd ${BUILDDIR}

		if [[ ! -s /tmp/php-build-cache/php-${VERSION}.tar.bz2 ]]; then
			if (test "${MINI_VERSION}" = "5.3"); then
				wget http://museum.php.net/php5/php-${VERSION}.tar.bz2 -O /tmp/php-build-cache/php-${VERSION}.tar.bz2
			elif (test "${MINI_VERSION}" = "5.4"); then
				wget http://museum.php.net/php5/php-${VERSION}.tar.bz2 -O /tmp/php-build-cache/php-${VERSION}.tar.bz2
			elif (test "${MINI_VERSION}" = "5.5"); then
				wget http://museum.php.net/php5/php-${VERSION}.tar.bz2 -O /tmp/php-build-cache/php-${VERSION}.tar.bz2
		#	elif (test "${MINI_VERSION}" = "5.6"); then
		#		wget http://museum.php.net/php5/php-${VERSION}.tar.bz2 -O /tmp/php-build-cache/php-${VERSION}.tar.bz2
			else
				wget http://uk1.php.net/distributions/php-${VERSION}.tar.bz2 -O /tmp/php-build-cache/php-${VERSION}.tar.bz2
			fi
		fi

		tar -xjf /tmp/php-build-cache/php-${VERSION}.tar.bz2
		cd php-${VERSION}

		if [[ -f ${PATCHES_DIR}/${MINI_VERSION}.diff.txt ]]; then
			echo "Patching for ${MINI_VERSION}"
			patch -p0 < /home/${USER}/dev/php/build-php/patches/${MINI_VERSION}.diff.txt
		fi
	fi
fi

echo "Building ${VERSION}${POSTFIX} with ($EXTRA_FLAGS)"

if (test "${THIRTYTWO}" = "32bit"); then
	OPTIONS="--build=i686-pc-linux-gnu --disable-all --with-pear --with-iconv --enable-posix --with-posix --enable-spl \
		--enable-tokenizer --enable-phar --with-phar --enable-json --enable-sockets --with-sqlite3 \
		--with-zlib --enable-filter --with-openssl --enable-hash --enable-opcache --enable-session --enable-ctype \
		--with-libxml --enable-libxml --enable-xml --enable-dom --enable-mbstring --enable-pdo --with-pdo-sqlite --enable-xmlwriter"
	if (test "${MINI_VERSION}" = "8.0"); then
		OPTIONS="$OPTIONS --without-openssl --disable-intl"
	fi
else
	OPTIONS="--with-gettext --with-gd --enable-gd --with-jpeg --with-freetype --with-jpeg-dir=/usr \
		--with-mysql=mysqlnd --enable-bcmath --with-readline \
		--with-openssl --without-esmtp --with-curl --with-sodium --with-ffi \
		--with-mysqli --enable-pcntl --enable-sockets --enable-zip --with-zip \
		--enable-memory-limit --with-mcrypt --with-libxml --enable-libxml \
		--with-iconv --enable-wddx --enable-calendar --with-sqlite3 \
		--enable-spl --enable-pdo --with-pdo-mysql --with-pdo-sqlite \
		--with-ctype --with-bz2 --enable-mbstring --with-mime-magic --with-gmp \
		--with-xmlrpc --with-zlib --disable-zend-memory-manager --with-esmtp \
		--with-xsl --enable-exif --enable-soap --enable-ftp --enable-intl --enable-opcache\
		--enable-fpm --enable-embed --enable-fileinfo --enable-zend-test"
	if (test "${MINI_VERSION}" = "7.0"); then
		OPTIONS="$OPTIONS --disable-intl"
	fi
	if (test "${MINI_VERSION}" = "7.1"); then
		OPTIONS="$OPTIONS --disable-intl"
	fi
	if (test "${MINI_VERSION}" = "7.2"); then
		OPTIONS="$OPTIONS --without-openssl --disable-intl"
	fi
	if (test "${MINI_VERSION}" = "7.3"); then
		OPTIONS="$OPTIONS --without-openssl --disable-intl"
	fi
	if (test "${MINI_VERSION}" = "7.4"); then
		OPTIONS="$OPTIONS --disable-intl --without-openssl"
		export PKG_CONFIG_PATH="/usr/local/openssl-1.1/lib/pkgconfig"
	fi
	if (test "${MINI_VERSION}" = "8.0"); then
		OPTIONS="$OPTIONS --disable-intl"
		export PKG_CONFIG_PATH="/usr/local/openssl-1.1/lib/pkgconfig"
	fi
fi
OPTIONS="$OPTIONS --with-pear --with-config-file-scan-dir=${TARGET_PREFIX_DIR}/${VERSION}${POSTFIX}/lib/conf.d"

set +x

make clean
rm ext/opcache/jit/zend_jit_x86.c
rm -rf configure
./vcsclean
./buildconf --force

./configure --prefix=${TARGET_PREFIX_DIR}/${VERSION}${POSTFIX} ${EXTRA_FLAGS} ${OPTIONS} || exit 5

make
make -j1 install

ln -fs /home/${USER}/php.default.ini ${TARGET_PREFIX_DIR}/${VERSION}${POSTFIX}/lib/php.ini

mkdir -p ${TARGET_PREFIX_DIR}/${VERSION}${POSTFIX}/lib/conf.d
ln -fs /home/${USER}/zzz-xdebug.ini ${TARGET_PREFIX_DIR}/${VERSION}${POSTFIX}/lib/conf.d/zzz-xdebug.ini
